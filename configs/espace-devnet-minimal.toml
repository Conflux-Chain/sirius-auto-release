# Config version
[global]
# The version of this configuration file.
version = 1

# Specifies the active space for the frontend: "core", "eSpace", or "all".
# "core": Only Core Space frontend will be configured and/or built.
# "eSpace": Only eSpace frontend will be configured and/or built.
# "all": Both Core Space and eSpace frontends will be configured and/or built.
space = "eSpace"

# The output directory for generated files and frontend build artifacts.
workdir = "./frontend"

# Frontend settings
[frontend]
# Specifies the frontend type.
#   "prebuilt": Uses pre-downloaded frontend files from `prebuilt_repo`.
type = "prebuilt"
prebuilt_repo = "https://github.com/Conflux-Chain/sirius-auto-release.git"


[frontend.e_space_settings]
# Backend service URL for eSpace.
# The frontend application will make requests (e.g., to /v1, /stat) to this URL.
# If containerization with Nginx proxy is enabled (see [container] and [proxy] sections),
# this URL is typically the upstream target for the Nginx proxy.
api_url = "https://evmtestnet.confluxscan.org"
# eSpace Open API request address.
ENV_OPEN_API_HOST = "https://evmapi-testnet.confluxscan.net"

# Optional settings for Core Space.
# If you want to include Core Space features, uncomment the following lines.
# # Core Space Open API Host (Optional). Used by eSpace frontend to request Core Space data if needed.
# ENV_CORE_API_HOST = "https://api-testnet.confluxscan.net"
# # Core Space Scan Host URL (Optional). Used for linking from eSpace to Core Space pages.
# ENV_CORE_SCAN_HOST = "https://testnet.confluxscan.net"

# eSpace RPC request address.
ENV_RPC_SERVER = "https://evmtestnet-cfxbridge.confluxrpc.com"
# The Network ID corresponding to this Scan instance for eSpace.
ENV_NETWORK_ID = 71
# Defines the network type, used by the frontend to distinguish between Core and EVM spaces.
ENV_NETWORK_TYPE = "EVM"
# The chain environment corresponding to this Scan instance (e.g., MAINNET, TESTNET, DEVNET).
ENV_CHAIN_TYPE = "DEVNET"
# URL for the logo image to be displayed in the eSpace frontend.
ENV_LOGO = "https://evmtestnet.confluxscan.net/static/media/logo-testnet.6a5c7ce7.svg"

# Settings for running the frontend in a container (Docker/Docker Compose).
[container]
# Set to true to enable containerization. If true, a Dockerfile (and optionally
# docker-compose.yml) will be generated, and Nginx will be used internally for serving.
enabled = true
# Specifies the container tooling:
#   "docker": Generates only a Dockerfile.
#   "docker-compose": Generates a Dockerfile and a docker-compose.yml file.
# type = "docker"
type = "docker-compose"
# Name for the Docker container or service (if using Docker Compose).
name = "scan-eth-frontend"
# Tag for the Docker image (e.g., "latest", "v1.0.0").
tag = "latest"

[container.e_space]
# Host port mapping for the eSpace service container.
# This is the port on your host machine that maps to the container's internal
# Nginx service port (defined in `proxy.e_space.port`).
port = 8001


# Proxy settings, primarily used when `container.enabled = true`.
# Nginx within the container(s) will use these settings to proxy frontend API requests.
[proxy]

# Proxy configuration for eSpace (when container.enabled = true).
[proxy.e_space]
# Internal port inside the container where the Nginx service for eSpace will listen.
# Ensure this port does not conflict with `proxy.core_space.port` if both are used.
# Note: `api_url` is not specified here for eSpace proxy. The Nginx configuration
# for eSpace will likely use `frontend.e_space_settings.api_url` as its upstream target.
port = 3001
